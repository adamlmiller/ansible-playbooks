###################################################
#                                                 #
# Create Simple AWS EC2 Instance with Elastic IP  #
#                                                 #
# Ansible Playbook to create an AWS EC2 instance  #
# with an Elastic IP Address                      #
#                                                 #
###################################################
---
- name: Create Simple AWS EC2 Instance                # Script Name
  hosts: localhost                                    # Hosts
  connection: local                                   # Connection
  gather_facts: false                                 # Gather facts?
  tasks:
    - name: Creating EC2 Instance                     # Script Name
      ec2:
        assign_public_ip: no                          # Assign Public IP Address
        aws_access_key: my_key                        # AWS Access Key
        aws_secret_key: my_secret                     # AWS Secret Key
        count: 1                                      # Number of instances to launch
        key_name: my_ssh_key                          # SSH Key to use
        group: ['default']                            # Security Groups to assign
        instance_type: t2.small                       # AWS EC2 Instance Type
        image: my_ami                                 # AMI
        private_ip: xxx.xxx.xxx.xxx                   # Instances Private IP Address
        region: aws_region                            # The region to deploy the instance in
        state: present                                # Create or Terminate
        termination_protection: yes                   # Termination Protection
        volumes:                                      # Volumes to create and attach
          - device_name: /dev/xvda                    # Volume Device Name
            volume_type: gp2                          # Volume Type
            volume_size: 8                            # Volume Size (GB)
            delete_on_termination: true               # Delete volume when instance is terminated
        vpc_subnet_id: my_subnet                      # VPC Subnet ID
        wait: true                                    # Wait for the instance to reach its desired state before returning
        wait_timeout: 500                             # Wait for 5 seconds
        zone: aws_zone                                # AWS Zone
      register: instance
    - name: Creating and Assigning New Elastic IP
      ec2_eip:
        aws_access_key: my_key
        aws_secret_key: my_secret
        in_vpc: yes
        reuse_existing_ip_allowed: no
        state: present
        region: aws_region
        device_id: "{{ instance.instances[0].id }}"
      register: eip
    - debug:
        msg: "VPS Instance ID: {{ instance.instances[0].id }} / EIP: {{ eip.public_ip }}"
